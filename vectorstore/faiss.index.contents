["# \u6d77\u667a\u7269\u6d41\u7cfb\u7edfAPI\u6587\u6863", "## 1. \u6982\u8ff0\n\u6d77\u667a\u7269\u6d41\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217API\u63a5\u53e3\uff0c\u7528\u4e8e\u8bbf\u95ee\u7269\u6d41\u7cfb\u7edf\u4e2d\u7684\u5404\u79cd\u529f\u80fd\uff0c\u5305\u62ec\u5e93\u5b58\u7ba1\u7406\u3001\u8ba2\u5355\u5904\u7406\u3001\u8fd0\u8f93\u8ba1\u5212\u548c\u5305\u88f9\u5206\u62e3\u7b49\u3002", "## 2. API\u54cd\u5e94\u683c\u5f0f\n\u6240\u6709API\u54cd\u5e94\u90fd\u9075\u5faa\u7edf\u4e00\u7684JSON\u683c\u5f0f\uff1a\n```json\n{\n  \"data\": {},\n  \"message\": \"\u64cd\u4f5c\u7ed3\u679c\u63cf\u8ff0\",\n  \"code\": \"\u54cd\u5e94\u7801\",\n  \"timestamp\": \"\u54cd\u5e94\u65f6\u95f4\"\n}\n```", "### 2.1 \u54cd\u5e94\u5b57\u6bb5\u8bf4\u660e\n| \u5b57\u6bb5\u540d | \u7c7b\u578b | \u5fc5\u586b | \u8bf4\u660e |\n|--------|------|------|------|\n| data | Object | \u662f | API\u8fd4\u56de\u7684\u5177\u4f53\u6570\u636e |\n| message | String | \u662f | \u64cd\u4f5c\u7ed3\u679c\u63cf\u8ff0\u4fe1\u606f |\n| code | String | \u662f | \u54cd\u5e94\u7801 |\n| timestamp | String | \u662f | \u54cd\u5e94\u65f6\u95f4\u6233\uff0c\u683c\u5f0f\u4e3aISO 8601 |", "### 2.2 \u901a\u7528\u9519\u8bef\u7801\u5b9a\u4e49\n| \u9519\u8bef\u7801 | \u8bf4\u660e |\n|--------|------|\n| ERR_0001 | \u53c2\u6570\u7f3a\u5931\u6216\u65e0\u6548 |\n| ERR_0002 | \u8d44\u6e90\u672a\u627e\u5230 |\n| ERR_0003 | \u7cfb\u7edf\u5185\u90e8\u9519\u8bef |\n| ERR_0004 | \u6743\u9650\u4e0d\u8db3 |\n| ERR_0005 | \u8bf7\u6c42\u8d85\u65f6 |", "## 3. \u5e93\u5b58\u7ba1\u7406API", "### 3.1 \u67e5\u8be2\u5e93\u5b58\u6c34\u5e73", "#### \u63a5\u53e3\u5730\u5740\n```\nGET /api/inventory/{productId}/level\n```", "#### \u8bf7\u6c42\u53c2\u6570\n| \u53c2\u6570\u540d | \u7c7b\u578b | \u5fc5\u586b | \u8bf4\u660e |\n|--------|------|------|------|\n| productId | String | \u662f | \u5546\u54c1ID |", "#### \u54cd\u5e94\u793a\u4f8b\n```json\n{\n  \"data\": {\n    \"productId\": \"P001\",\n    \"productName\": \"\u667a\u80fd\u624b\u673a\",\n    \"quantity\": 150,\n    \"warehouseLocation\": \"A-01-01\"\n  },\n  \"message\": \"\u67e5\u8be2\u6210\u529f\",\n  \"code\": \"SUCCESS\",\n  \"timestamp\": \"2025-10-28T10:30:00Z\"\n}\n```", "### 3.2 \u8ba1\u7b97\u5e93\u5b58\u5468\u8f6c\u7387", "#### \u63a5\u53e3\u5730\u5740\n```\nPOST /api/inventory/turnover-rate\n```", "#### \u8bf7\u6c42\u53c2\u6570\n| \u53c2\u6570\u540d | \u7c7b\u578b | \u5fc5\u586b | \u8bf4\u660e |\n|--------|------|------|------|\n| costOfGoodsSold | Number | \u662f | \u9500\u552e\u6210\u672c |\n| beginningInventory | Number | \u662f | \u671f\u521d\u5e93\u5b58 |\n| endingInventory | Number | \u662f | \u671f\u672b\u5e93\u5b58 |", "#### \u54cd\u5e94\u793a\u4f8b\n```json\n{\n  \"data\": {\n    \"turnoverRate\": 8.5,\n    \"formula\": \"\u9500\u552e\u6210\u672c / \u5e73\u5747\u5e93\u5b58\",\n    \"averageInventory\": 125000\n  },\n  \"message\": \"\u8ba1\u7b97\u6210\u529f\",\n  \"code\": \"SUCCESS\",\n  \"timestamp\": \"2025-10-28T10:30:00Z\"\n}\n```", "## 4. \u8fd0\u8f93\u7ba1\u7406API", "### 4.1 \u4f18\u5316\u914d\u9001\u8def\u7ebf", "#### \u63a5\u53e3\u5730\u5740\n```\nPOST /api/transportation/optimize-route\n```", "#### \u8bf7\u6c42\u53c2\u6570\n| \u53c2\u6570\u540d | \u7c7b\u578b | \u5fc5\u586b | \u8bf4\u660e |\n|--------|------|------|------|\n| shipments | Array | \u662f | \u8fd0\u8f93\u5355\u5217\u8868 |\n| vehicles | Array | \u662f | \u8f66\u8f86\u5217\u8868 |", "#### \u54cd\u5e94\u793a\u4f8b\n```json\n{\n  \"data\": {\n    \"assignments\": {\n      \"SHP001\": \"V001\",\n      \"SHP002\": \"V002\"\n    },\n    \"totalDistance\": 2500.5\n  },\n  \"message\": \"\u8def\u7ebf\u4f18\u5316\u5b8c\u6210\",\n  \"code\": \"SUCCESS\",\n  \"timestamp\": \"2025-10-28T10:30:00Z\"\n}\n```", "## 5. \u5206\u62e3\u7ba1\u7406API", "### 5.1 \u83b7\u53d6\u5305\u88f9\u72b6\u6001", "#### \u63a5\u53e3\u5730\u5740\n```\nGET /api/sorting/package/{packageId}/status\n```", "#### \u8bf7\u6c42\u53c2\u6570\n| \u53c2\u6570\u540d | \u7c7b\u578b | \u5fc5\u586b | \u8bf4\u660e |\n|--------|------|------|------|\n| packageId | String | \u662f | \u5305\u88f9ID |", "#### \u54cd\u5e94\u793a\u4f8b\n```json\n{\n  \"data\": {\n    \"packageId\": \"PKG001\",\n    \"status\": \"SORTED\",\n    \"chuteId\": \"CHUTE-01\",\n    \"updateTime\": \"2025-10-28T10:15:00Z\"\n  },\n  \"message\": \"\u67e5\u8be2\u6210\u529f\",\n  \"code\": \"SUCCESS\",\n  \"timestamp\": \"2025-10-28T10:30:00Z\"\n}\n```", "## 6. \u9519\u8bef\u5904\u7406", "### 6.1 \u9519\u8bef\u54cd\u5e94\u683c\u5f0f\n\u5f53API\u8c03\u7528\u51fa\u73b0\u9519\u8bef\u65f6\uff0c\u7cfb\u7edf\u4f1a\u8fd4\u56de\u4ee5\u4e0b\u683c\u5f0f\u7684\u9519\u8bef\u54cd\u5e94\uff1a\n```json\n{\n  \"error\": {\n    \"code\": \"ERR_0001\",\n    \"message\": \"\u53c2\u6570\u7f3a\u5931\u6216\u65e0\u6548\",\n    \"details\": \"productId\u4e0d\u80fd\u4e3a\u7a7a\"\n  },\n  \"timestamp\": \"2025-10-28T10:30:00Z\"\n}\n```", "### 6.2 \u7279\u5b9a\u4e1a\u52a1\u9519\u8bef\u7801\n| \u9519\u8bef\u7801 | \u8bf4\u660e |\n|--------|------|\n| ERR_1001 | \u6ca1\u6709\u8fd0\u8f93\u5355\u9700\u8981\u5904\u7406 |\n| ERR_1002 | \u6ca1\u6709\u53ef\u7528\u7684\u8f66\u8f86 |\n| ERR_1003 | \u8f66\u8f86\u5bb9\u91cf\u4e0d\u8db3 |\n| ERR_2001 | \u5e93\u5b58\u4e0d\u8db3 |\n| ERR_2002 | \u5546\u54c1\u4e0d\u5b58\u5728 |\n| ERR_3001 | \u5305\u88f9\u672a\u627e\u5230 |\n| ERR_3002 | \u5206\u62e3\u89c4\u5219\u4e0d\u5339\u914d |", "package com.haiwise.logistics.wms;\n\nimport java.util.Date;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.ArrayList;", "public class WMSInventoryManagement {", "public static class Inventory {", "private String productId;", "private String productName;", "private int quantity;", "private String warehouseLocation;", "private Date lastUpdated;", "public Inventory(String productId, String productName, int quantity, String warehouseLocation) {\n            this.productId = productId;\n            this.productName = productName;\n            this.quantity = quantity;\n            this.warehouseLocation = warehouseLocation;\n            this.lastUpdated = new Date();\n        }", "public String getProductId() { return productId; }", "public String getProductName() { return productName; }", "public int getQuantity() { return quantity; }", "public String getWarehouseLocation() { return warehouseLocation; }", "public Date getLastUpdated() { return lastUpdated; }", "public void setQuantity(int quantity) { \n            this.quantity = quantity; \n            this.lastUpdated = new Date();\n        }", "public void setWarehouseLocation(String warehouseLocation) { \n            this.warehouseLocation = warehouseLocation; \n            this.lastUpdated = new Date();\n        }", "public static class InboundOrder {", "private String inboundId;", "private String productId;", "private String productName;", "private int quantity;", "private String supplier;", "private Date createTime;", "private String status; // PENDING, RECEIVED, PROCESSED", "public InboundOrder(String inboundId, String productId, String productName, \n                           int quantity, String supplier) {\n            this.inboundId = inboundId;\n            this.productId = productId;\n            this.productName = productName;\n            this.quantity = quantity;\n            this.supplier = supplier;\n            this.createTime = new Date();\n            this.status = \"PENDING\";\n        }", "public String getInboundId() { return inboundId; }", "public String getProductId() { return productId; }", "public String getProductName() { return productName; }", "public int getQuantity() { return quantity; }", "public String getSupplier() { return supplier; }", "public Date getCreateTime() { return createTime; }", "public String getStatus() { return status; }", "public void setStatus(String status) { this.status = status; }", "public static class OutboundOrder {", "private String outboundId;", "private String productId;", "private String productName;", "private int quantity;", "private String destination;", "private Date createTime;", "private String status; // PENDING, PICKED, PACKED, SHIPPED", "public OutboundOrder(String outboundId, String productId, String productName, \n                            int quantity, String destination) {\n            this.outboundId = outboundId;\n            this.productId = productId;\n            this.productName = productName;\n            this.quantity = quantity;\n            this.destination = destination;\n            this.createTime = new Date();\n            this.status = \"PENDING\";\n        }", "public String getOutboundId() { return outboundId; }", "public String getProductId() { return productId; }", "public String getProductName() { return productName; }", "public int getQuantity() { return quantity; }", "public String getDestination() { return destination; }", "public Date getCreateTime() { return createTime; }", "public String getStatus() { return status; }", "public void setStatus(String status) { this.status = status; }", "private Map<String, Inventory> inventoryMap;", "public WMSInventoryManagement() {\n        this.inventoryMap = new HashMap<>();\n    }", "public boolean processInbound(InboundOrder inboundOrder) {\n        try {\n            // \u66f4\u65b0\u5e93\u5b58\n            Inventory inventory = inventoryMap.get(inboundOrder.getProductId());\n            if (inventory == null) {\n                inventory = new Inventory(\n                    inboundOrder.getProductId(),\n                    inboundOrder.getProductName(),\n                    inboundOrder.getQuantity(),\n                    \"A-01-01\" // \u9ed8\u8ba4\u5e93\u4f4d\n                );", "\"A-01-01\" // \u9ed8\u8ba4\u5e93\u4f4d\n                );\n\n                inventoryMap.put(inboundOrder.getProductId(), inventory);\n            }", "public boolean processOutbound(OutboundOrder outboundOrder) {\n        try {\n            // \u68c0\u67e5\u5e93\u5b58\n            Inventory inventory = inventoryMap.get(outboundOrder.getProductId());\n            if (inventory == null || inventory.getQuantity() < outboundOrder.getQuantity()) {\n                System.err.println(\"\u6d77\u667a\u7269\u6d41\uff1a\u5e93\u5b58\u4e0d\u8db3\uff0c\u65e0\u6cd5\u5904\u7406\u51fa\u5e93\u5355 \" + outboundOrder.getOutboundId());\n                return false;\n            }", "public Inventory getInventory(String productId) {\n        return inventoryMap.get(productId);\n    }", "public int getInventoryLevel(String productId) {\n        Inventory inventory = inventoryMap.get(productId);\n        if (inventory == null) {\n            return 0; // \u8fb9\u754c\u6761\u4ef6\uff1a\u5546\u54c1\u4e0d\u5b58\u5728\u65f6\u8fd4\u56de0\n        }", "public double calculateTurnoverRate(double costOfGoodsSold, double beginningInventory, double endingInventory) {\n        // \u8ba1\u7b97\u5e73\u5747\u5e93\u5b58\n        double averageInventory = (beginningInventory + endingInventory) / 2;\n        \n        // \u8fb9\u754c\u6761\u4ef6\uff1a\u5e73\u5747\u5e93\u5b58\u4e3a0\u65f6\u8fd4\u56de0\n        if (averageInventory == 0) {\n            return 0;\n        }", "public String generateInboundId() {\n        return \"INB\" + System.currentTimeMillis();\n    }", "public String generateOutboundId() {\n        return \"OUT\" + System.currentTimeMillis();\n    }", "\u6d77\u667a\u7269\u6d41\u6709\u9650\u516c\u53f8\u7b80\u4ecb\n\u5173\u4e8e\u6d77\u667a\u7269\u6d41\n\u6d77\u667a\u7269\u6d41\uff08HaizhiLogistics\uff09\u6210\u7acb\u4e8e2015\u5e74\uff0c\u662f\u4e00\u5bb6\u4ee5\u201c\u667a\u80fd\u6280\u672f\u9a71\u52a8\n\u7269\u6d41\u6548\u7387\uff0c\u573a\u666f\u5316\u670d\u52a1\u94fe\u63a5\u5168\u7403\u201d\u4e3a\u6838\u5fc3\u5b9a\u4f4d\u7684\u7efc\u5408\u7269\u6d41\u670d\u52a1\u5546\u3002\u4f9d\u6258\u81ea\n\u4e3b\u7814\u53d1\u7684\u201c\u6d77\u667a\u5927\u8111\u201d\u667a\u80fd\u8c03\u5ea6\u7cfb\u7edf\uff0c\u878d\u5408\u7269\u8054\u7f51\u3001\u5927\u6570\u636e\u4e0eAI\u7b97\u6cd5\uff0c\u5728\n\u4fdd\u6301\u4e0e\u884c\u4e1a\u5934\u90e8\u4f01\u4e1a\uff08\u5982\u987a\u4e30\u3001\u4eac\u4e1c\u3001\u56db\u901a\u4e00\u8fbe\uff09\u6838\u5fc3\u4e1a\u52a1\u8986\u76d6\u4e00\u81f4\u6027\n\u7684\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u201c\u6280\u672f\u6df1\u8015+\u573a\u666f\u521b\u65b0\u201d\u6253\u9020\u5dee\u5f02\u5316\u7ade\u4e89\u529b\uff0c\u670d\u52a1\u8986\u76d6\u5168\u56fd\n334\u4e2a\u5730\u7ea7\u5e02\u30012800\u4f59\u4e2a\u533a\u53bf\uff0c\u8de8\u5883\u4e1a\u52a1\u89e6\u8fbe\u5168\u7403120+\u56fd\u5bb6\u548c\u5730\u533a\uff0c\u7d2f\n\u8ba1\u670d\u52a1\u5ba2\u6237\u8d85500\u4e07\uff0c2024\u5e74\u5168\u7f51\u65e5\u5747\u5355\u91cf\u7a81\u7834800\u4e07\u4ef6\u3002\n\u6838\u5fc3\u4e1a\u52a1\u53ca\u5dee\u5f02\u5316\u7279\u70b9\n1.\u56fd\u5185\u5feb\u9012\u4e1a\u52a1\uff1a\u201c\u52a8\u6001\u65f6\u6548\uff0c\u6309\u9700\u5339\u914d\u201d\n\uf0b7\u57fa\u7840\u670d\u52a1\uff1a\u8986\u76d6\u540c\u57ce\u3001\u7701\u5185\u3001\u8de8\u7701\u7684\u6807\u51c6\u5feb\u9012\uff081-3\u5929\u8fbe\uff09\u3001\u7ecf\u6d4e\n\u5feb\u9012\uff083-5\u5929\u8fbe\uff09\uff0c\u4e0e\u884c\u4e1a\u4e3b\u6d41\u65f6\u6548\u4e00\u81f4\u3002\n\uf0b7\u5dee\u5f02\u5316\u4eae\u70b9\uff1a\no\u63a8\u51fa\u201c\u65f6\u6548\u81ea\u9009\u201d\u6a21\u5f0f\uff1a\u901a\u8fc7\u201c\u6d77\u667a\u5927\u8111\u201d\u5b9e\u65f6\u8ba1\u7b97\u8def\u7531\u62e5\u5835\u7cfb\n\u6570\uff0c\u7528\u6237\u53ef\u5728\u4e0b\u5355\u65f6\u9009\u62e9\u201c\u7cbe\u51c6\u8fbe\u201d\uff08\u8bef\u5dee\u22642\u5c0f\u65f6\uff09\u3001\u201c\u5f39\u6027\n\u8fbe\u201d\uff08\u6bd4\u6807\u51c6\u65f6\u6548\u665a1\u5929\u4f46\u8fd0\u8d39\u4f4e15%\uff09\u6216\u201c\u5e94\u6025\u8fbe\u201d\uff08\u540c\u57ce4\n\u5c0f\u65f6\u3001\u8de8\u57ce12\u5c0f\u65f6\uff0c\u52a8\u6001\u52a0\u4ef7\uff09\uff0c\u6ee1\u8db3\u4e0d\u540c\u573a\u666f\u9700\u6c42\u3002\no\u667a\u80fd\u5305\u88c5\u9002\u914d\uff1a\u7cfb\u7edf\u6839\u636e\u8d27\u7269\u5c3a\u5bf8\u3001\u6750\u8d28\u81ea\u52a8\u63a8\u8350\u73af\u4fdd\u5305\u88c5\n\u65b9\u6848\uff0c", "\u5c0f\u65f6\uff0c\u52a8\u6001\u52a0\u4ef7\uff09\uff0c\u6ee1\u8db3\u4e0d\u540c\u573a\u666f\u9700\u6c42\u3002\no\u667a\u80fd\u5305\u88c5\u9002\u914d\uff1a\u7cfb\u7edf\u6839\u636e\u8d27\u7269\u5c3a\u5bf8\u3001\u6750\u8d28\u81ea\u52a8\u63a8\u8350\u73af\u4fdd\u5305\u88c5\n\u65b9\u6848\uff0c\u51cf\u5c11\u8fc7\u5ea6\u5305\u88c5\uff08\u6bd4\u884c\u4e1a\u5e73\u5747\u51cf\u5c1120%\u5305\u88c5\u6750\u6599\uff09\uff0c\u540c\n\u65f6\u63d0\u4f9b\u201c\u9632\u6454\u53ef\u89c6\u5316\u201d\u670d\u52a1\uff08\u5185\u7f6e\u5fae\u578b\u4f20\u611f\u5668\uff0c\u8fd0\u8f93\u4e2d\u5f02\u5e38\u9707\n\u52a8\u53ef\u5b9e\u65f6\u63d0\u9192\uff09\u3002\n2.\u7535\u5546\u7269\u6d41\u4e1a\u52a1\uff1a\u201c\u5168\u94fe\u8def\u534f\u540c\uff0c\u5e93\u5b58\u5373\u670d\u52a1\u201d\n\uf0b7\u57fa\u7840\u670d\u52a1\uff1a\u4e3a\u7535\u5546\u5e73\u53f0\u3001\u54c1\u724c\u5546\u5bb6\u63d0\u4f9b\u4ed3\u50a8\u7ba1\u7406\u3001\u8ba2\u5355\u5c65\u7ea6\u3001\u914d\u9001\n\u4e00\u4f53\u5316\u670d\u52a1\uff0c\u652f\u6301\u4e00\u4ef6\u4ee3\u53d1\u3001\u9000\u6362\u8d27\u5904\u7406\uff0c\u4e0e\u4eac\u4e1c\u7269\u6d41\u3001\u987a\u4e30\u7535\u5546\n\u4ed3\u914d\u8986\u76d6\u8303\u56f4\u57fa\u672c\u4e00\u81f4\u3002\n\uf0b7\u5dee\u5f02\u5316\u4eae\u70b9\uff1a\no\u201c\u5206\u5e03\u5f0f\u4e91\u4ed3+\u5171\u4eab\u5e93\u5b58\u201d\u6a21\u5f0f\uff1a\u5728\u5168\u56fd20\u4e2a\u6838\u5fc3\u57ce\u5e02\u5e03\u5c40\n\u201c\u524d\u7f6e\u4e91\u4ed3\u201d\uff0c\u5546\u5bb6\u53ef\u5c06\u5e93\u5b58\u5206\u6563\u5b58\u50a8\uff0c\u7cfb\u7edf\u6839\u636e\u7528\u6237\u5730\u5740\u81ea\n\u52a8\u5339\u914d\u6700\u8fd1\u4ed3\u53d1\u8d27\uff08\u65f6\u6548\u63d0\u534730%\uff09\uff1b\u540c\u65f6\u652f\u6301\u591a\u5546\u5bb6\u5171\u4eab\n\u4ed3\u5185\u8d44\u6e90\uff0c\u4e2d\u5c0f\u5546\u5bb6\u4ed3\u50a8\u6210\u672c\u964d\u4f4e25%\u3002", "o\u9006\u5411\u7269\u6d41\u589e\u503c\uff1a\u9488\u5bf9\u9000\u6362\u8d27\uff0c\u63d0\u4f9b\u201c\u4e0a\u95e8\u8d28\u68c0+\u5373\u65f6\u91cd\u53d1\u201d\u670d\n\u52a1\uff0c\u8d28\u68c0\u6570\u636e\u540c\u6b65\u81f3\u5546\u5bb6\u540e\u53f0\uff0c\u51cf\u5c11\u4e8c\u6b21\u6c9f\u901a\u6210\u672c\uff0c\u9000\u6362\u8d27\n\u5904\u7406\u6548\u7387\u6bd4\u884c\u4e1a\u5feb1\u5929\u3002\n3.\u51b7\u94fe\u7269\u6d41\u4e1a\u52a1\uff1a\u201c\u5168\u7a0b\u6e29\u63a7\uff0c\u573a\u666f\u5b9a\u5236\u201d\n\uf0b7\u57fa\u7840\u670d\u52a1\uff1a\u8986\u76d6\u751f\u9c9c\u3001\u533b\u836f\u3001\u5316\u5de5\u7b49\u9886\u57df\u7684\u51b7\u94fe\u8fd0\u8f93\uff0c\u63d0\u4f9b\u51b7\u85cf\n\uff080-10\u2103\uff09\u3001\u51b7\u51bb\uff08-18\u2103\u4ee5\u4e0b\uff09\u3001\u6df1\u51b7\uff08-60\u2103\u4ee5\u4e0b\uff09\u5206\u7ea7\u670d\u52a1\uff0c\n\u4e0e\u987a\u4e30\u51b7\u94fe\u3001\u4eac\u4e1c\u51b7\u94fe\u7684\u6e29\u63a7\u6807\u51c6\u4e00\u81f4\u3002\n\uf0b7\u5dee\u5f02\u5316\u4eae\u70b9\uff1a\no\u201c\u573a\u666f\u5316\u6e29\u63a7\u65b9\u6848\u201d\uff1a\u9488\u5bf9\u6d77\u9c9c\u7c7b\u63a8\u51fa\u201c\u6d3b\u6c34\u4fdd\u9c9c\u4ed3\u201d\uff08\u8fd0\u8f93\u4e2d\n\u4fdd\u6301\u6c34\u6e29\u3001\u6c27\u6c14\u5b9e\u65f6\u8c03\u8282\uff09\uff0c\u9488\u5bf9\u75ab\u82d7\u7c7b\u63a8\u51fa\u201c\u533a\u5757\u94fe\u6e29\u63a7\n\u6eaf\u6e90\u201d\uff08\u6bcf30\u5206\u949f\u4e0a\u4f20\u4e00\u6b21\u6e29\u5ea6\u6570\u636e\uff0c\u4e0d\u53ef\u7be1\u6539\uff09\uff0c\u9488\u5bf9\u51b0\n\u6dc7\u6dcb\u7c7b\u63a8\u51fa\u201c\u5e72\u51b0\u667a\u80fd\u8865\u7ed9\u201d\uff08\u7cfb\u7edf\u9884\u5224\u8def\u7ebf\u65f6\u957f\uff0c\u81ea\u52a8\u5206\u914d\n\u5e72\u51b0\u7528\u91cf\uff0c\u907f\u514d\u6d6a\u8d39\uff09\u3002\no\u672b\u7aef\u201c\u51b7\u9c9c\u67dc\u5171\u4eab\u201d\uff1a\u5728\u793e\u533a\u3001\u5199\u5b57\u697c\u94fa\u8bbe\u667a\u80fd\u51b7\u9c9c\u67dc\uff0c\u652f\u6301\n\u7528\u623724\u5c0f\u65f6\u81ea\u63d0\uff0c\u67dc\u5185\u6e29\u5ea6\u6839\u636e\u5b58\u653e\u54c1\u7c7b\u81ea\u52a8\u5207\u6362\uff0c\u89e3\u51b3\n\u201c\u6700\u540e100\u7c73\u201d\u51b7\u94fe\u65ad\u88c2\u95ee\u9898\u3002\n4.\u4f9b\u5e94\u94fe\u7ba1\u7406\u4e1a\u52a1\uff1a\u201c\u667a\u80fd\u9884\u6d4b\uff0c\u67d4\u6027\u54cd\u5e94\u201d\n\uf0b7\u57fa\u7840\u670d\u52a1\uff1a\u4e3a\u5236\u9020\u4e1a\u3001\u96f6\u552e\u4e1a\u63d0\u4f9b\u91c7\u8d2d\u7269\u6d41\u3001\u751f\u4ea7\u7269\u6d41\u3001\u5206\u9500\u7269\u6d41\n\u5168\u94fe\u6761\u7ba1\u7406\uff0c\u5305\u542b\u8fd0\u8f93\u89c4\u5212\u3001\u5e93\u5b58\u4f18\u5316\u3001\u4f9b\u5e94\u94fe\u91d1\u878d\u7b49\uff0c\u4e0e\u884c\u4e1a\u4e3b\n\u6d41\u4f9b\u5e94\u94fe\u670d\u52a1\u8303\u56f4\u4e00\u81f4\u3002\n\uf0b7\u5dee\u5f02\u5316\u4eae\u70b9\uff1a\no\u201c\u9700\u6c42\u9884\u6d4b\u5f15\u64ce\u201d\uff1a\u901a\u8fc7\u5206\u6790\u5546\u5bb6\u5386\u53f2\u9500", "\u5e94\u94fe\u91d1\u878d\u7b49\uff0c\u4e0e\u884c\u4e1a\u4e3b\n\u6d41\u4f9b\u5e94\u94fe\u670d\u52a1\u8303\u56f4\u4e00\u81f4\u3002\n\uf0b7\u5dee\u5f02\u5316\u4eae\u70b9\uff1a\no\u201c\u9700\u6c42\u9884\u6d4b\u5f15\u64ce\u201d\uff1a\u901a\u8fc7\u5206\u6790\u5546\u5bb6\u5386\u53f2\u9500\u552e\u6570\u636e\u3001\u5e02\u573a\u8d8b\u52bf\u3001\n\u751a\u81f3\u5929\u6c14\u56e0\u7d20\uff0c\u63d0\u524d15\u5929\u9884\u6d4b\u9500\u91cf\u6ce2\u52a8\uff0c\u81ea\u52a8\u8c03\u6574\u5e93\u5b58\u5e03\n\u5c40\uff08\u5982\u66b4\u96e8\u524d\u589e\u52a0\u96e8\u4f1e\u54c1\u7c7b\u7684\u533a\u57df\u5907\u8d27\uff09\uff0c\u5e2e\u52a9\u5ba2\u6237\u964d\u4f4e\n15%-20%\u7684\u5e93\u5b58\u79ef\u538b\u3002\no\u201c\u8de8\u5883\u4f9b\u5e94\u94fe\u95ed\u73af\u201d\uff1a\u6574\u5408\u56fd\u9645\u6d77\u8fd0\u3001\u7a7a\u8fd0\u8d44\u6e90\uff0c\u5728\u4e1c\u5357\u4e9a\u3001\n\u6b27\u6d32\u8bbe\u7acb7\u4e2a\u6d77\u5916\u5206\u62e8\u4e2d\u5fc3\uff0c\u63d0\u4f9b\u201c\u6d77\u5916\u4ed3\u5907\u8d27+\u672c\u5730\u914d\u9001+\n\u5173\u7a0e\u4ee3\u7f34\u201d\u4e00\u7ad9\u5f0f\u670d\u52a1\uff0c\u8de8\u5883\u8ba2\u5355\u5c65\u7ea6\u65f6\u6548\u7f29\u77ed\u81f33-7\u5929\uff0c\u6bd4\n\u884c\u4e1a\u5e73\u5747\u5feb2-3\u5929\u3002\n5.\u540c\u57ce\u5373\u65f6\u914d\u9001\uff1a\u201c\u52a8\u6001\u8fd0\u529b\u6c60\uff0c\u4e07\u7269\u53ef\u901f\u8fbe\u201d\n\uf0b7\u57fa\u7840\u670d\u52a1\uff1a\u8986\u76d6\u9910\u996e\u3001\u5546\u8d85\u3001\u836f\u54c1\u3001\u6587\u4ef6\u7b49\u540c\u57ce\u5373\u65f6\u914d\u9001\uff0c\u652f\u6301\n30\u5206\u949f-2\u5c0f\u65f6\u8fbe\uff0c\u4e0e\u987a\u4e30\u540c\u57ce\u3001\u4eac\u4e1c\u5230\u5bb6\u7684\u670d\u52a1\u573a\u666f\u4e00\u81f4\u3002", "\uf0b7\u5dee\u5f02\u5316\u4eae\u70b9\uff1a\no\u201c\u793e\u4f1a\u8fd0\u529b\u534f\u540c\u201d\uff1a\u9664\u81ea\u6709\u9a91\u624b\u5916\uff0c\u63a5\u5165\u793e\u533a\u4fbf\u5229\u5e97\u5e97\u5458\u3001\u5c0f\n\u533a\u4fdd\u5b89\u7b49\u201c\u517c\u804c\u8fd0\u529b\u201d\uff0c\u5728\u8ba2\u5355\u9ad8\u5cf0\u65f6\u6bb5\u81ea\u52a8\u8c03\u5ea6\uff08\u5982\u5199\u5b57\u697c\n\u5348\u95f4\u8ba2\u5355\u4f18\u5148\u5206\u914d\u5468\u8fb9\u4fbf\u5229\u5e97\u517c\u804c\u4eba\u5458\uff09\uff0c\u8fd0\u529b\u6210\u672c\u964d\u4f4e\n18%\uff0c\u9ad8\u5cf0\u671f\u8ba2\u5355\u5c65\u7ea6\u7387\u4fdd\u630198%\u4ee5\u4e0a\u3002\no\u201c\u7279\u6b8a\u7269\u54c1\u4e13\u9001\u201d\uff1a\u9488\u5bf9\u5ba0\u7269\u3001\u9c9c\u82b1\u3001\u7cbe\u5bc6\u4eea\u5668\u7b49\u63a8\u51fa\u201c\u4e13\u9879\u8fd0\n\u529b\u201d\uff0c\u9a91\u624b\u914d\u5907\u5b9a\u5236\u5de5\u5177\uff08\u5982\u5ba0\u7269\u822a\u7a7a\u7bb1\u3001\u9c9c\u82b1\u4fdd\u6e7f\u7bb1\uff09\uff0c\n\u5e76\u901a\u8fc7AI\u8def\u7ebf\u89c4\u5212\u907f\u5f00\u98a0\u7c38\u8def\u6bb5\uff0c\u7269\u54c1\u635f\u8017\u7387\u63a7\u5236\u57280.5%\n\u4ee5\u4e0b\u3002\n\u6280\u672f\u652f\u6491\n\u6838\u5fc3\u7ade\u4e89\u529b\u6e90\u4e8e\u201c\u6d77\u667a\u5927\u8111\u201d\u667a\u80fd\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u6574\u5408\u4e86\uff1a\n-\u5b9e\u65f6\u8def\u7531\u4f18\u5316\uff1a\u6bcf5\u5206\u949f\u66f4\u65b0\u4e00\u6b21\u5168\u56fd\u8fd0\u8f93\u7f51\u7edc\u8def\u51b5\uff0c\u8f66\u8f86/\u9a91\u624b\u8def\u5f84\n\u8c03\u6574\u6548\u7387\u6bd4\u4f20\u7edf\u7cfb\u7edf\u5feb3\u500d\uff1b\n-\u667a\u80fd\u5ba2\u670d\u4e2d\u53f0\uff1a95%\u7684\u54a8\u8be2\u901a\u8fc7AI\u8bed\u97f3/\u6587\u5b57\u89e3\u51b3\uff0c\u4eba\u5de5\u5ba2\u670d\u4ec5\u5904\u7406\u590d\n\u6742\u95ee\u9898\uff0c\u54cd\u5e94\u901f\u5ea6\u63d0\u5347\u81f315\u79d2\u5185\uff1b\n-\u7eff\u8272\u7269\u6d41\u7b97\u6cd5\uff1a\u4f18\u5148\u5339\u914d\u65b0\u80fd\u6e90\u8f66\u8f86\uff0c\u89c4\u5212\u6700\u77ed\u78b3\u8db3\u8ff9\u8def\u7ebf\uff0c2024\u5e74\n\u5168\u7f51\u78b3\u6392\u653e\u8f83\u884c\u4e1a\u5e73\u5747\u6c34\u5e73\u964d\u4f4e22%\u3002\n\u4f01\u4e1a\u613f\u666f\n\u4ee5\u201c\u8ba9\u6bcf\u4e00\u6b21\u6d41\u901a\u90fd\u66f4\u667a\u80fd\u3001\u66f4\u9ad8\u6548\u3001\u66f4\u7eff\u8272\u201d\u4e3a\u4f7f\u547d\uff0c\u6d77\u667a\u7269\u6d41\u81f4\u529b\u4e8e\u6210\n\u4e3a\u8fde\u63a5\u751f\u4ea7\u4e0e\u6d88\u8d39\u7684\u201c\u667a\u80fd\u7269\u6d41\u67a2\u7ebd\u201d\uff0c\u901a\u8fc7\u6280\u672f\u521b\u65b0\u91cd\u65b0\u5b9a\u4e49\u7269\u6d41\u670d\u52a1\u7684\n\u7075\u6d3b\u6027\u4e0e\u7cbe\u51c6\u5ea6\uff0c\u4e3a\u7528\u6237\u521b\u9020\u201c\u6309\u9700\u6240\u8fbe\u3001\u5168\u7a0b\u53ef\u63a7\u201d\u7684\u7269\u6d41\u4f53\u9a8c\u3002", "\"\"\"\n\u6d77\u667a\u7269\u6d41\u5206\u62e3\u7cfb\u7edf\nSorting Management System \u5b9e\u73b0\n\n\u8be5\u6a21\u5757\u8d1f\u8d23\u5904\u7406\u5305\u88f9\u5206\u62e3\u3001\u8def\u7531\u89c4\u5212\u3001\u5206\u62e3\u8bbe\u5907\u63a7\u5236\u7b49\u64cd\u4f5c\n\"\"\"\n\nimport datetimefrom typing import List, Dict, Optionalfrom enum import Enum", "class PackageStatus(Enum):\n    \"\"\"\u5305\u88f9\u72b6\u6001\u679a\u4e3e\"\"\"\n    RECEIVED = \"\u5df2\u63a5\u6536\"\n    SORTING = \"\u5206\u62e3\u4e2d\"\n    SORTED = \"\u5df2\u5206\u62e3\"\n    ROUTED = \"\u5df2\u8def\u7531\"\n    LOADED = \"\u5df2\u88c5\u8f66\"", "class Package:\n    \"\"\"\u5305\u88f9\u5b9e\u4f53\u7c7b\"\"\"", "def __init__(self, package_id: str, weight: float, destination: str, \n                 package_type: str = \"\u666e\u901a\u5305\u88f9\"):\n        self.package_id = package_id\n        self.weight = weight  # \u91cd\u91cf(\u516c\u65a4)\n        self.destination = destination\n        self.package_type = package_type\n        self.status = PackageStatus.RECEIVED\n        self.create_time = datetime.datetime.now()\n        self.update_time = datetime.datetime.now()\n        self.sorted_time = None\n        self.routed_destination = None", "def update_status(self, status: PackageStatus):\n        \"\"\"\u66f4\u65b0\u5305\u88f9\u72b6\u6001\"\"\"\n        self.status = status\n        self.update_time = datetime.datetime.now()\n        \n        if status == PackageStatus.SORTED:\n            self.sorted_time = datetime.datetime.now()", "class SortingRule:\n    \"\"\"\u5206\u62e3\u89c4\u5219\u7c7b\"\"\"", "def __init__(self, rule_id: str, destination_prefix: str, target_chute: str, \n                 priority: int = 1):\n        self.rule_id = rule_id\n        self.destination_prefix = destination_prefix\n        self.target_chute = target_chute  # \u76ee\u6807\u6ed1\u69fd\n        self.priority = priority", "class SortingMachine:\n    \"\"\"\u5206\u62e3\u8bbe\u5907\u7c7b\"\"\"", "def __init__(self, machine_id: str, capacity: int = 1000):\n        self.machine_id = machine_id\n        self.capacity = capacity  # \u6bcf\u5c0f\u65f6\u5904\u7406\u80fd\u529b\n        self.is_operational = True\n        self.current_load = 0", "class SMSSortingManager:\n    \"\"\"\u5206\u62e3\u7ba1\u7406\u7c7b\"\"\"", "def __init__(self):\n        self.packages: Dict[str, Package] = {}\n        self.sorting_rules: List[SortingRule] = []\n        self.machines: Dict[str, SortingMachine] = {}\n        self.chute_assignments: Dict[str, str] = {}  # \u5305\u88f9ID -> \u6ed1\u69fdID", "def receive_package(self, weight: float, destination: str, \n                       package_type: str = \"\u666e\u901a\u5305\u88f9\") -> Package:\n        \"\"\"\n        \u63a5\u6536\u5305\u88f9\n        \n        Args:\n            weight: \u5305\u88f9\u91cd\u91cf(\u516c\u65a4)\n            destination: \u76ee\u7684\u5730\n            package_type: \u5305\u88f9\u7c7b\u578b\n            \n        Returns:\n            \u521b\u5efa\u7684\u5305\u88f9\u5bf9\u8c61\n        \"\"\"\n        package_id = self._generate_package_id()\n        package = Package(package_id, weight, destination, package_type)\n        self.packages[package_id] = package", "self.packages[package_id] = package\n        \n\n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u5df2\u63a5\u6536\uff0c\u91cd\u91cf {weight}\u516c\u65a4\uff0c\u76ee\u7684\u5730 {destination}\")\n        return package", "def add_sorting_rule(self, destination_prefix: str, target_chute: str, \n                        priority: int = 1) -> SortingRule:\n        \"\"\"\n        \u6dfb\u52a0\u5206\u62e3\u89c4\u5219\n        \n        Args:\n            destination_prefix: \u76ee\u7684\u5730\u524d\u7f00\n            target_chute: \u76ee\u6807\u6ed1\u69fd\n            priority: \u4f18\u5148\u7ea7\n            \n        Returns:\n            \u521b\u5efa\u7684\u5206\u62e3\u89c4\u5219\u5bf9\u8c61\n        \"\"\"\n        rule_id = f\"RULE{len(self.sorting_rules) + 1}\"\n        rule = SortingRule(rule_id, destination_prefix, target_chute, priority)", "e_id, destination_prefix, target_chute, priority)\n\n        self.sorting_rules.append(rule)\n        \n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u6dfb\u52a0\u5206\u62e3\u89c4\u5219 {rule_id}\uff0c\u76ee\u7684\u5730\u524d\u7f00 {destination_prefix} -> \u6ed1\u69fd {target_chute}\")\n        return rule", "def sort_package(self, package_id: str) -> Optional[str]:\n        \"\"\"\n        \u5206\u62e3\u5305\u88f9\n        \n        Args:\n            package_id: \u5305\u88f9ID\n            \n        Returns:\n            \u5206\u62e3\u5230\u7684\u6ed1\u69fdID\uff0c\u5982\u679c\u65e0\u6cd5\u5206\u62e3\u5219\u8fd4\u56deNone\n        \"\"\"\n        if package_id not in self.packages:\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u4e0d\u5b58\u5728\")\n            return None\n            \n        package = self.packages[package_id]\n        package.update_status(PackageStatus.SORTING)\n        \n        # \u6839\u636e\u76ee\u7684\u5730\u67e5\u627e\u5339\u914d\u7684\u5206\u62e3\u89c4\u5219\n        target_chute = None", "# \u6839\u636e\u76ee\u7684\u5730\u67e5\u627e\u5339\u914d\u7684\u5206\u62e3\u89c4\u5219\n        target_chute = None\n\n        matched_rule = None\n        \n        # \u6309\u4f18\u5148\u7ea7\u6392\u5e8f\u89c4\u5219\n        sorted_rules = sorted(self.sorting_rules, key=lambda r: r.priority)\n        \n        for rule in sorted_rules:\n            if package.destination.startswith(rule.destination_prefix):\n                target_chute = rule.target_chute\n                matched_rule = rule\n                break\n        \n        if target_chute:\n            # \u6267\u884c\u5206\u62e3", "if target_chute:\n            # \u6267\u884c\u5206\u62e3\n\n            package.update_status(PackageStatus.SORTED)\n            self.chute_assignments[package_id] = target_chute\n            package.routed_destination = target_chute\n            \n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u5df2\u5206\u62e3\u5230\u6ed1\u69fd {target_chute} (\u5339\u914d\u89c4\u5219 {matched_rule.rule_id})\")\n            return target_chute\n        else:\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u65e0\u6cd5\u627e\u5230\u5408\u9002\u7684\u5206\u62e3\u89c4\u5219\")\n            package.update_status(PackageStatus.RECEIVED)  # \u56de\u9000\u72b6\u6001", "age.update_status(PackageStatus.RECEIVED)  # \u56de\u9000\u72b6\u6001\n\n            return None", "def route_package(self, package_id: str, target_transport: str) -> bool:\n        \"\"\"\n        \u8def\u7531\u5305\u88f9\u5230\u6307\u5b9a\u8fd0\u8f93\u65b9\u5f0f\n        \n        Args:\n            package_id: \u5305\u88f9ID\n            target_transport: \u76ee\u6807\u8fd0\u8f93\u65b9\u5f0f\n            \n        Returns:\n            \u8def\u7531\u7ed3\u679c\n        \"\"\"\n        if package_id not in self.packages:\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u4e0d\u5b58\u5728\")\n            return False\n            \n        package = self.packages[package_id]\n        \n        if package.status != PackageStatus.SORTED:", "if package.status != PackageStatus.SORTED:\n\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u5c1a\u672a\u5b8c\u6210\u5206\u62e3\uff0c\u65e0\u6cd5\u8def\u7531\")\n            return False\n            \n        package.update_status(PackageStatus.ROUTED)\n        package.routed_destination = target_transport\n        \n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u5df2\u8def\u7531\u5230 {target_transport}\")\n        return True", "def load_package(self, package_id: str, vehicle_id: str) -> bool:\n        \"\"\"\n        \u88c5\u8f66\u64cd\u4f5c\n        \n        Args:\n            package_id: \u5305\u88f9ID\n            vehicle_id: \u8f66\u8f86ID\n            \n        Returns:\n            \u88c5\u8f66\u7ed3\u679c\n        \"\"\"\n        if package_id not in self.packages:\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u4e0d\u5b58\u5728\")\n            return False\n            \n        package = self.packages[package_id]\n        \n        if package.status != PackageStatus.ROUTED:", "if package.status != PackageStatus.ROUTED:\n\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u5c1a\u672a\u8def\u7531\uff0c\u65e0\u6cd5\u88c5\u8f66\")\n            return False\n            \n        package.update_status(PackageStatus.LOADED)\n        \n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5305\u88f9 {package_id} \u5df2\u88c5\u8f66 {vehicle_id}\")\n        return True", "def add_sorting_machine(self, machine_id: str, capacity: int = 1000) -> SortingMachine:\n        \"\"\"\n        \u6dfb\u52a0\u5206\u62e3\u8bbe\u5907\n        \n        Args:\n            machine_id: \u8bbe\u5907ID\n            capacity: \u6bcf\u5c0f\u65f6\u5904\u7406\u80fd\u529b\n            \n        Returns:\n            \u521b\u5efa\u7684\u5206\u62e3\u8bbe\u5907\u5bf9\u8c61\n        \"\"\"\n        machine = SortingMachine(machine_id, capacity)\n        self.machines[machine_id] = machine\n        \n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u5206\u62e3\u8bbe\u5907 {machine_id} \u5df2\u6dfb\u52a0\uff0c\u5904\u7406\u80fd\u529b {capacity}\u4ef6/\u5c0f\u65f6\")\n        return machine", "def get_packages_by_status(self, status: PackageStatus) -> List[Package]:\n        \"\"\"\n        \u6839\u636e\u72b6\u6001\u67e5\u8be2\u5305\u88f9\n        \n        Args:\n            status: \u5305\u88f9\u72b6\u6001\n            \n        Returns:\n            \u7b26\u5408\u6761\u4ef6\u7684\u5305\u88f9\u5217\u8868\n        \"\"\"\n        return [pkg for pkg in self.packages.values() if pkg.status == status]", "def _generate_package_id(self) -> str:\n        \"\"\"\u751f\u6210\u5305\u88f9ID\"\"\"\n        return f\"PKG{int(datetime.datetime.now().timestamp() * 1000)}\"\n\n# \u4f7f\u7528\u793a\u4f8b\nif __name__ == \"__main__\":\n    # \u521b\u5efa\u5206\u62e3\u7ba1\u7406\u7cfb\u7edf\u5b9e\u4f8b\n    sms = SMSSortingManager()\n    \n    # \u6dfb\u52a0\u5206\u62e3\u8bbe\u5907\n    machine1 = sms.add_sorting_machine(\"SM001\", 1500)\n    machine2 = sms.add_sorting_machine(\"SM002\", 2000)\n    \n    # \u6dfb\u52a0\u5206\u62e3\u89c4\u5219\n    sms.add_sorting_rule(\"\u5317\u4eac\", \"CHUTE-01\", 1)\n    sms.add_sorting_rule(\"\u4e0a\u6d77\", \"CHUTE-02\", 1)\n    sms.add_sorting_rule(\"\u5e7f\u5dde\", \"CHUTE-03\", 1)", "1)\n    sms.add_sorting_rule(\"\u5e7f\u5dde\", \"CHUTE-03\", 1)\n\n    sms.add_sorting_rule(\"\u6df1\u5733\", \"CHUTE-04\", 1)\n    \n    # \u63a5\u6536\u5305\u88f9\n    pkg1 = sms.receive_package(2.5, \"\u5317\u4eac\u5e02\u671d\u9633\u533a\")\n    pkg2 = sms.receive_package(1.2, \"\u4e0a\u6d77\u5e02\u6d66\u4e1c\u65b0\u533a\")\n    pkg3 = sms.receive_package(5.0, \"\u5e7f\u5dde\u5e02\u5929\u6cb3\u533a\")\n    \n    # \u5206\u62e3\u5305\u88f9\n    sms.sort_package(pkg1.package_id)\n    sms.sort_package(pkg2.package_id)\n    sms.sort_package(pkg3.package_id)", "\"\"\"\n\u6d77\u667a\u7269\u6d41\u8fd0\u8f93\u7ba1\u7406\u7cfb\u7edf\nTransportation Management System (TMS) \u5b9e\u73b0\n\n\u8be5\u6a21\u5757\u8d1f\u8d23\u5904\u7406\u8fd0\u8f93\u8ba1\u5212\u3001\u8def\u7ebf\u4f18\u5316\u3001\u8f66\u8f86\u8c03\u5ea6\u7b49\u64cd\u4f5c\n\"\"\"\n\nimport datetimefrom typing import List, Dict, Optionalfrom enum import Enum", "class ShipmentStatus(Enum):\n    \"\"\"\u8fd0\u8f93\u72b6\u6001\u679a\u4e3e\"\"\"\n    CREATED = \"\u5df2\u521b\u5efa\"\n    SCHEDULED = \"\u5df2\u6392\u7a0b\"\n    IN_TRANSIT = \"\u8fd0\u8f93\u4e2d\"\n    DELIVERED = \"\u5df2\u9001\u8fbe\"\n    CANCELLED = \"\u5df2\u53d6\u6d88\"", "class Shipment:\n    \"\"\"\u8fd0\u8f93\u5355\u5b9e\u4f53\u7c7b\"\"\"", "def __init__(self, shipment_id: str, origin: str, destination: str, \n                 planned_distance: float):\n        self.shipment_id = shipment_id\n        self.origin = origin\n        self.destination = destination\n        self.planned_distance = planned_distance\n        self.status = ShipmentStatus.CREATED\n        self.create_time = datetime.datetime.now()\n        self.update_time = datetime.datetime.now()\n        self.assigned_vehicle = None\n        self.estimated_arrival = None", "def update_status(self, status: ShipmentStatus):\n        \"\"\"\u66f4\u65b0\u8fd0\u8f93\u72b6\u6001\"\"\"\n        self.status = status\n        self.update_time = datetime.datetime.now()", "def assign_vehicle(self, vehicle_id: str, estimated_arrival: datetime.datetime):\n        \"\"\"\u5206\u914d\u8fd0\u8f93\u8f66\u8f86\"\"\"\n        self.assigned_vehicle = vehicle_id\n        self.estimated_arrival = estimated_arrival\n        self.update_status(ShipmentStatus.SCHEDULED)", "class Vehicle:\n    \"\"\"\u8f66\u8f86\u5b9e\u4f53\u7c7b\"\"\"", "def __init__(self, vehicle_id: str, plate_number: str, capacity: float, \n                 current_location: str):\n        self.vehicle_id = vehicle_id\n        self.plate_number = plate_number\n        self.capacity = capacity  # \u8f7d\u91cd\u80fd\u529b(\u5428)\n        self.current_location = current_location\n        self.is_available = True\n        self.current_shipment = None", "class TMSTransportationPlanner:\n    \"\"\"\u8fd0\u8f93\u8ba1\u5212\u7ba1\u7406\u7c7b\"\"\"", "def __init__(self):\n        self.shipments: Dict[str, Shipment] = {}\n        self.vehicles: Dict[str, Vehicle] = {}", "def create_shipment(self, origin: str, destination: str, \n                       planned_distance: float) -> Shipment:\n        \"\"\"\n        \u521b\u5efa\u8fd0\u8f93\u5355\n        \n        Args:\n            origin: \u8d77\u70b9\n            destination: \u7ec8\u70b9\n            planned_distance: \u8ba1\u5212\u8ddd\u79bb(\u516c\u91cc)\n            \n        Returns:\n            \u521b\u5efa\u7684\u8fd0\u8f93\u5355\n        \"\"\"\n        shipment_id = self._generate_shipment_id()\n        shipment = Shipment(shipment_id, origin, destination, planned_distance)\n        self.shipments[shipment_id] = shipment", "e)\n        self.shipments[shipment_id] = shipment\n\n        \n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8fd0\u8f93\u5355 {shipment_id} \u5df2\u521b\u5efa\uff0c\u4ece {origin} \u5230 {destination}\")\n        return shipment", "def schedule_shipment(self, shipment_id: str, vehicle_id: str, \n                         estimated_arrival: datetime.datetime) -> bool:\n        \"\"\"\n        \u5b89\u6392\u8fd0\u8f93\u8ba1\u5212\n        \n        Args:\n            shipment_id: \u8fd0\u8f93\u5355ID\n            vehicle_id: \u8f66\u8f86ID\n            estimated_arrival: \u9884\u8ba1\u5230\u8fbe\u65f6\u95f4\n            \n        Returns:\n            \u5b89\u6392\u7ed3\u679c\n        \"\"\"\n        if shipment_id not in self.shipments:\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8fd0\u8f93\u5355 {shipment_id} \u4e0d\u5b58\u5728\")\n            return False", "t_id} \u4e0d\u5b58\u5728\")\n            return False\n            \n\n        if vehicle_id not in self.vehicles:\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8f66\u8f86 {vehicle_id} \u4e0d\u5b58\u5728\")\n            return False\n            \n        shipment = self.shipments[shipment_id]\n        vehicle = self.vehicles[vehicle_id]\n        \n        if not vehicle.is_available:\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8f66\u8f86 {vehicle_id} \u4e0d\u53ef\u7528\")\n            return False\n            \n        # \u5206\u914d\u8f66\u8f86\n        shipment.assign_vehicle(vehicle_id, estimated_arrival)", "ent.assign_vehicle(vehicle_id, estimated_arrival)\n\n        vehicle.is_available = False\n        vehicle.current_shipment = shipment_id\n        \n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8fd0\u8f93\u5355 {shipment_id} \u5df2\u5b89\u6392\u8f66\u8f86 {vehicle_id}\")\n        return True", "def start_transportation(self, shipment_id: str) -> bool:\n        \"\"\"\n        \u5f00\u59cb\u8fd0\u8f93\n        \n        Args:\n            shipment_id: \u8fd0\u8f93\u5355ID\n            \n        Returns:\n            \u542f\u52a8\u7ed3\u679c\n        \"\"\"\n        if shipment_id not in self.shipments:\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8fd0\u8f93\u5355 {shipment_id} \u4e0d\u5b58\u5728\")\n            return False\n            \n        shipment = self.shipments[shipment_id]\n        shipment.update_status(ShipmentStatus.IN_TRANSIT)\n        \n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8fd0\u8f93\u5355 {shipment_id} \u5f00\u59cb\u8fd0\u8f93\")", "print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8fd0\u8f93\u5355 {shipment_id} \u5f00\u59cb\u8fd0\u8f93\")\n\n        return True", "def complete_transportation(self, shipment_id: str) -> bool:\n        \"\"\"\n        \u5b8c\u6210\u8fd0\u8f93\n        \n        Args:\n            shipment_id: \u8fd0\u8f93\u5355ID\n            \n        Returns:\n            \u5b8c\u6210\u7ed3\u679c\n        \"\"\"\n        if shipment_id not in self.shipments:\n            print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8fd0\u8f93\u5355 {shipment_id} \u4e0d\u5b58\u5728\")\n            return False\n            \n        shipment = self.shipments[shipment_id]\n        shipment.update_status(ShipmentStatus.DELIVERED)\n        \n        # \u91ca\u653e\u8f66\u8f86", "ShipmentStatus.DELIVERED)\n        \n        # \u91ca\u653e\u8f66\u8f86\n\n        if shipment.assigned_vehicle:\n            vehicle = self.vehicles[shipment.assigned_vehicle]\n            vehicle.is_available = True\n            vehicle.current_shipment = None\n            vehicle.current_location = shipment.destination\n        \n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8fd0\u8f93\u5355 {shipment_id} \u5df2\u5b8c\u6210\uff0c\u8d27\u7269\u5df2\u9001\u8fbe {shipment.destination}\")\n        return True", "def add_vehicle(self, vehicle_id: str, plate_number: str, capacity: float, \n                   current_location: str) -> Vehicle:\n        \"\"\"\n        \u6dfb\u52a0\u8f66\u8f86\n        \n        Args:\n            vehicle_id: \u8f66\u8f86ID\n            plate_number: \u8f66\u724c\u53f7\n            capacity: \u8f7d\u91cd\u80fd\u529b(\u5428)\n            current_location: \u5f53\u524d\u4f4d\u7f6e\n            \n        Returns:\n            \u521b\u5efa\u7684\u8f66\u8f86\u5bf9\u8c61\n        \"\"\"\n        vehicle = Vehicle(vehicle_id, plate_number, capacity, current_location)\n        self.vehicles[vehicle_id] = vehicle", "self.vehicles[vehicle_id] = vehicle\n        \n\n        print(f\"\u6d77\u667a\u7269\u6d41\uff1a\u8f66\u8f86 {vehicle_id} ({plate_number}) \u5df2\u6dfb\u52a0\u5230\u7cfb\u7edf\")\n        return vehicle", "def _generate_shipment_id(self) -> str:\n        \"\"\"\u751f\u6210\u8fd0\u8f93\u5355ID\"\"\"\n        return f\"SHP{int(datetime.datetime.now().timestamp() * 1000)}\"", "def optimize_delivery_route(self, shipments: List[Shipment], vehicles: List[Vehicle]) -> Dict[str, str]:\n        \"\"\"\n        \u914d\u9001\u8def\u7ebf\u4f18\u5316\u7b97\u6cd5\n        \u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u8fdb\u884c\u7b80\u5355\u7684\u8def\u7ebf\u4f18\u5316\n        \n        Args:\n            shipments: \u8fd0\u8f93\u5355\u5217\u8868\n            vehicles: \u8f66\u8f86\u5217\u8868\n            \n        Returns:\n            Dict[\u8fd0\u8f93\u5355ID, \u8f66\u8f86ID]: \u8fd0\u8f93\u5355\u5230\u8f66\u8f86\u7684\u5206\u914d\u6620\u5c04\n        \"\"\"\n        # \u9519\u8bef\u7801\u5b9a\u4e49\n        ERR_NO_SHIPMENTS = \"ERR_1001: \u6ca1\u6709\u8fd0\u8f93\u5355\u9700\u8981\u5904\u7406\"\n        ERR_NO_VEHICLES = \"ERR_1002: \u6ca1\u6709\u53ef\u7528\u7684\u8f66\u8f86\"\n        ERR_INSUFFICIENT_CAPACITY = \"ERR_1003: \u8f66\u8f86\u5bb9\u91cf\u4e0d\u8db3\"", "SUFFICIENT_CAPACITY = \"ERR_1003: \u8f66\u8f86\u5bb9\u91cf\u4e0d\u8db3\"\n        \n\n        # \u8fb9\u754c\u6761\u4ef6\u68c0\u67e5\n        if not shipments:\n            print(ERR_NO_SHIPMENTS)\n            return {}\n            \n        if not vehicles:\n            print(ERR_NO_VEHICLES)\n            return {}\n        \n        # \u6309\u8ba1\u5212\u8ddd\u79bb\u964d\u5e8f\u6392\u5e8f\u8fd0\u8f93\u5355\n        sorted_shipments = sorted(shipments, key=lambda s: s.planned_distance, reverse=True)\n        \n        # \u6309\u5bb9\u91cf\u964d\u5e8f\u6392\u5e8f\u8f66\u8f86\n        sorted_vehicles = sorted(vehicles, key=lambda v: v.capacity, reverse=True)", "key=lambda v: v.capacity, reverse=True)\n        \n\n        # \u5206\u914d\u7ed3\u679c\n        assignment = {}\n        \n        # \u8d2a\u5fc3\u5206\u914d\u7b97\u6cd5\n        for shipment in sorted_shipments:\n            assigned = False\n            for vehicle in sorted_vehicles:\n                # \u68c0\u67e5\u8f66\u8f86\u662f\u5426\u53ef\u7528\n                if vehicle.is_available:\n                    # \u7b80\u5316\u7684\u5bb9\u91cf\u68c0\u67e5\uff08\u5b9e\u9645\u5e94\u7528\u4e2d\u9700\u8981\u8003\u8651\u66f4\u591a\u56e0\u7d20\uff09\n                    if vehicle.capacity >= shipment.planned_distance / 100:  # \u5047\u8bbe\u6bcf100\u516c\u91cc\u9700\u89811\u5428\u5bb9\u91cf", "hipment.planned_distance / 100:  # \u5047\u8bbe\u6bcf100\u516c\u91cc\u9700\u89811\u5428\u5bb9\u91cf\n\n                        assignment[shipment.shipment_id] = vehicle.vehicle_id\n                        vehicle.is_available = False\n                        assigned = True\n                        break\n            \n            # \u5982\u679c\u6ca1\u6709\u8f66\u8f86\u53ef\u4ee5\u5206\u914d\n            if not assigned:\n                print(f\"{ERR_INSUFFICIENT_CAPACITY} \u65e0\u6cd5\u4e3a\u8fd0\u8f93\u5355 {shipment.shipment_id} \u5206\u914d\u8f66\u8f86\")\n        \n        return assignment\n\n# \u4f7f\u7528\u793a\u4f8b\nif __name__ == \"__main__\":\n    # \u521b\u5efa\u8fd0\u8f93\u7ba1\u7406\u7cfb\u7edf\u5b9e\u4f8b", "\u4f7f\u7528\u793a\u4f8b\nif __name__ == \"__main__\":\n    # \u521b\u5efa\u8fd0\u8f93\u7ba1\u7406\u7cfb\u7edf\u5b9e\u4f8b\n\n    tms = TMSTransportationPlanner()\n    \n    # \u6dfb\u52a0\u8f66\u8f86\n    vehicle1 = tms.add_vehicle(\"V001\", \"\u7ca4A12345\", 10.0, \"\u5e7f\u5dde\u4ed3\u50a8\")\n    vehicle2 = tms.add_vehicle(\"V002\", \"\u7ca4B67890\", 15.0, \"\u6df1\u5733\u914d\u9001\u4e2d\u5fc3\")\n    \n    # \u521b\u5efa\u8fd0\u8f93\u5355\n    shipment = tms.create_shipment(\"\u5e7f\u5dde\u4ed3\u50a8\", \"\u5317\u4eac\u5ba2\u6237\", 2000.5)\n    \n    # \u5b89\u6392\u8fd0\u8f93\u8ba1\u5212\n    arrival_time = datetime.datetime.now() + datetime.timedelta(hours=24)\n    tms.schedule_shipment(shipment.shipment_id, \"V001\", arrival_time)\n    \n    # \u5f00\u59cb\u8fd0\u8f93", "hipment_id, \"V001\", arrival_time)\n    \n    # \u5f00\u59cb\u8fd0\u8f93\n\n    tms.start_transportation(shipment.shipment_id)", "package com.haiwise.logistics.oms;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.ArrayList;", "public class OMSOrderManagement {", "public enum OrderStatus {\n        CREATED, CONFIRMED, PROCESSING, SHIPPED, DELIVERED, CANCELLED\n    }", "public static class Order {", "private String orderId;", "private String customerId;", "private List<OrderItem> items;", "private double totalAmount;", "private OrderStatus status;", "private Date createTime;", "private Date updateTime;\n        \n        // \u6784\u9020\u51fd\u6570", "public Order(String orderId, String customerId) {\n            this.orderId = orderId;\n            this.customerId = customerId;\n            this.items = new ArrayList<>();\n            this.status = OrderStatus.CREATED;\n            this.createTime = new Date();\n            this.updateTime = new Date();\n        }", "public String getOrderId() { return orderId; }", "public String getCustomerId() { return customerId; }", "public List<OrderItem> getItems() { return items; }", "public double getTotalAmount() { return totalAmount; }", "public OrderStatus getStatus() { return status; }", "public Date getCreateTime() { return createTime; }", "public Date getUpdateTime() { return updateTime; }", "public void setStatus(OrderStatus status) { \n            this.status = status; \n            this.updateTime = new Date();\n        }", "public void addItem(OrderItem item) {\n            this.items.add(item);\n            calculateTotalAmount();\n        }", "private void calculateTotalAmount() {\n            this.totalAmount = items.stream()\n                .mapToDouble(item -> item.getPrice() * item.getQuantity())\n                .sum();\n        }", "public static class OrderItem {", "private String productId;", "private String productName;", "private int quantity;", "private double price;", "public OrderItem(String productId, String productName, int quantity, double price) {\n            this.productId = productId;\n            this.productName = productName;\n            this.quantity = quantity;\n            this.price = price;\n        }", "public String getProductId() { return productId; }", "public String getProductName() { return productName; }", "public int getQuantity() { return quantity; }", "public double getPrice() { return price; }", "public Order createOrder(String customerId, List<OrderItem> items) {\n        String orderId = generateOrderId();\n        Order order = new Order(orderId, customerId);\n        \n        for (OrderItem item : items) {\n            order.addItem(item);\n        }", "public Order confirmOrder(Order order) {\n        if (order.getStatus() == OrderStatus.CREATED) {\n            order.setStatus(OrderStatus.CONFIRMED);\n            System.out.println(\"\u6d77\u667a\u7269\u6d41\uff1a\u8ba2\u5355 \" + order.getOrderId() + \" \u5df2\u786e\u8ba4\");\n        }", "public Order cancelOrder(Order order) {\n        if (order.getStatus() != OrderStatus.SHIPPED && \n            order.getStatus() != OrderStatus.DELIVERED) {\n            order.setStatus(OrderStatus.CANCELLED);\n            System.out.println(\"\u6d77\u667a\u7269\u6d41\uff1a\u8ba2\u5355 \" + order.getOrderId() + \" \u5df2\u53d6\u6d88\");\n        }", "private String generateOrderId() {\n        return \"ORD\" + System.currentTimeMillis();\n    }"]